This repo will go over some of the stuffs that I have learned in Python! Cheers!

Master Branch- is supposedly production ready stuff. 

Branch- people work on improving things on the branch. They commit those changes to the branch and they create a pull request - "Can we merge this modification in the master branch?". So, that's how they merge it back to the master.

The idea of creating branches and working on them is the central idea of the GIT and the master branch is the one that if somebody says we need to turn it in something now. You can say take the current version from master, it doesn't have any errors, it's good to go!

When you want to add changes, you do that in the branch! 

You work on the branch until you iron out all the bugs and merge those changes back to the master!


.gitignore is a file that tells git don't worry about these files, I don't want them to be tracked

Head will let us know what commit we are working on and we can do back and forth with git checkout and commit name

and to go back to main branch, you type in git checkout main

If you need to create a branch, you do: git branch branchName. 
After that you might want to do this: git checkout branchName. This will enable you to work on the branch.
Once you're on the branch, do all the regular stuff and push it back to the Github.

And, you can come and work on main branch by doing: git checkout main/ master. SO whatever the changes you've made on the branch is undone in main branch. 

To go back and forth between the branches, do this:

git checkout branchName
git checkout main


And to see the differences in branchName and main, do this:

git diff main branchName


Easier way to create a branch:

git checkout -b 'branchName'

On the branchName portion you need to give it a name


How to merge changes made at branch with the main?

git checkout main
git merge branchName

You need to give the name of the branch that you want to merge with the main. All the changes will be copied to the main branch.







